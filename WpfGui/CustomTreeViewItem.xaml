<TreeViewItem x:Class="WpfGui.CustomTreeViewItem"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <TreeViewItem.Template>
        <ControlTemplate TargetType="TreeViewItem" xmlns:s="clr-namespace:System;assembly=mscorlib">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" MinWidth="19" />
                    <ColumnDefinition Width="Auto"  />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <!-- Horizontal line -->
                <Rectangle x:Name="HorLine" Margin="9,0,0,0" Height="1" Grid.ColumnSpan="2" Stroke="#DCDCDC" SnapsToDevicePixels="True" />

                <!-- Vertical line -->
                <Rectangle x:Name="VerLn" Margin="-1,0,0,0" Width="1" Stroke="#DCDCDC" Grid.Row="1" Grid.Column="1" SnapsToDevicePixels="true" VerticalAlignment="Top"/>

                <!-- Toggle Button -->
                <ToggleButton x:Name="ExpanderToggleButton" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Mode=TwoWay}" ClickMode="Press">
                    <ToggleButton.Style>
                        <Style TargetType="ToggleButton">
                            <Setter Property="UIElement.Focusable" Value="False" />
                            <Setter Property="FrameworkElement.Width" Value="9" />
                            <Setter Property="FrameworkElement.Height" Value="9" />
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Width="9" Height="9" CornerRadius="1" BorderBrush="Black" BorderThickness="1" SnapsToDevicePixels="True">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,2" StartPoint="0.5,0">
                                                    <GradientStop Color="White" Offset="0" />
                                                    <GradientStop Color="Silver" Offset="0.5" />
                                                    <GradientStop Color="LightGray" Offset="1" />
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Grid>
                                                <Rectangle x:Name="HorizontalLineRectangle" Width="5" Height="1" SnapsToDevicePixels="True" Stroke="Black" />
                                                <Rectangle x:Name="VerticalLineRectangle" Width="1" Height="5" SnapsToDevicePixels="True" Stroke="Black" />
                                            </Grid>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                <Setter Property="Visibility" TargetName="VerticalLineRectangle" Value="Hidden" />

                                            </Trigger>
                                            <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                <Setter Property="Shape.Stroke" TargetName="HorizontalLineRectangle" Value="#FF1BBBFA" />
                                                <Setter Property="Shape.Stroke" TargetName="VerticalLineRectangle" Value="#FF1BBBFA" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>

                <Border x:Name="Bd" BorderThickness="{TemplateBinding Border.BorderThickness}" Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Border.BorderBrush}" Background="{TemplateBinding Panel.Background}" SnapsToDevicePixels="True" Grid.Column="1">
                    <ContentPresenter x:Name="PART_Header" MinWidth="19" Content="{TemplateBinding HeaderedContentControl.Header}" ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                </Border>
                <ItemsPresenter x:Name="ItemsHost" Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="2" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                    <Setter Property="UIElement.Visibility" TargetName="ItemsHost" Value="{x:Static Member=Visibility.Collapsed}" />
                    <Setter Property="Visibility" TargetName="VerLn" Value="Collapsed" />
                </Trigger>
                <Trigger Property="ItemsControl.HasItems" Value="False">
                    <Setter Property="UIElement.Visibility" TargetName="ExpanderToggleButton" Value="{x:Static Member=Visibility.Hidden}" />
                    <Setter Property="Visibility" TargetName="VerLn" Value="Collapsed" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </TreeViewItem.Template>
</TreeViewItem>
